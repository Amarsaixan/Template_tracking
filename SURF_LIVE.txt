#include <stdio.h>
#include <iostream>
#include <opencv2\core.hpp>
#include <opencv2\features2d.hpp>
#include <opencv2\xfeatures2d.hpp>
#include <opencv2\highgui.hpp>
#include <opencv2/imgproc.hpp>
#include <opencv2/opencv_modules.hpp>
#include <opencv2/opencv.hpp>

using namespace cv;
using namespace cv::xfeatures2d;



int main(int, char**)
{
	VideoCapture cap(0);
	if (!cap.isOpened())
		return -1;

	Mat edges;

	Mat img_1 = imread("template.png", IMREAD_GRAYSCALE);
	Mat img_2;// = imread("2.png", IMREAD_GRAYSCALE);

			  /*if (!img_1.data || !img_2.data)
			  {
			  std::cout << " --(!) Error reading images " << std::endl; return -1;
			  }*/
	int minHessian;
	for (;;)
	{
		Mat frame;
		cap >> frame;
		cvtColor(frame, edges, COLOR_BGR2GRAY);
		img_2 = frame;
		minHessian = 400;

		Ptr<SURF> detector = SURF::create(minHessian);

		std::vector<KeyPoint> keypoints_1, keypoints_2;

		detector->detect(img_1, keypoints_1);
		detector->detect(img_2, keypoints_2);

		//-- Draw keypoints
		Mat img_keypoints_1; Mat img_keypoints_2;

		//	drawKeypoints(img_1, keypoints_1, img_keypoints_1, Scalar::all(-1), DrawMatchesFlags::DEFAULT);
		drawKeypoints(img_2, keypoints_2, img_keypoints_2, Scalar::all(-1), DrawMatchesFlags::DEFAULT);

		//-- Show detected (drawn) keypoints
		//imshow("Keypoints 1", img_keypoints_1);
		imshow("Keypoints 2", img_keypoints_2);

		//imshow("result", edges);
		if (waitKey(30) >= 0) break;
	}
	return 0;
}